"""
재귀 함수를 이용한 피보나치 함수 코드 : x가 커질수록 수행 시간이 기하급수적으로 늘어난다는 단점이 있다.
시간 복잡도: O(2*N)
"""
def fibo(x):
    if x == 1 or x == 2:
        return 1
    return fibo(x - 1) + fibo(x - 2)


""" 
DP(메모이제이션)을 적용한 재귀를 활용한 피보나치 함수 코드 (탑다운 DP) 
"""
d = [0] * 100    # 한 번 계산된 결과를 메모이제이션하기 위한 리스트 초기화
def fibo(x):
    # 종료 조건 (1 혹은 2 일 때, 1을 반환)
    if x == 1 or x == 2:
        return 1
    # 이미 계산한 적이 있는 문제라면 그대로 반환
    if d[x] != 0:
        return d[x]
    # 아직 계산하지 않은 문제라면 점화식에 따라서 피보나치 결과 반환
    else:
        d[x] = fibo(x - 1) + fibo(x + 2)
        return d[x]

"""
반복문을 적용한 피보나치 함수 코드 (바텀업 DP)
"""
d = [0] * 100    # 한 번 계산된 결과를 메모이제이션하기 위한 리스트 초기화

d[1] = 1
d[2] = 2
n = 99

for i in range(3, n + 1):
    d[i] = d[i - 1] + d[i - 2]